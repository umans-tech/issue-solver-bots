#!/usr/bin/env just --justfile

set dotenv-load := true

ws := `bash -c 'if [ -n "$GH_PR_NUMBER" ]; then \
    echo "pr-$GH_PR_NUMBER"; \
  else \
    branch=$(git rev-parse --abbrev-ref HEAD | sed "s/[\\/]/-/g"); \
    if [ "$branch" = "main" ]; then \
      echo "production"; \
    else \
      echo "pr-$branch"; \
    fi; \
  fi'`
branch_name := `bash -c 'git rev-parse --abbrev-ref HEAD'`

# 🎬 Initialize terraform workspace for resources provisionning
init:
    @echo ">>> Using workspace: {{ ws }}"
    @echo ">>> Using branch name: {{ branch_name }}"
    @terraform workspace select {{ ws }} 2>/dev/null || terraform workspace new {{ ws }}
    @terraform init

# 🗺️ Plan changes for resources provisionning
plan: init
    @terraform plan -var "branch_name={{ branch_name }}"

# 🚀 Apply changes for resources provisionning
apply: init
    @terraform apply -var "branch_name={{ branch_name }}" -auto-approve

# 👀 Show outputs for resources provisionning
output:
    @echo "\n>>> Transaction Pooler Connection (PostgreSQL): ⚡️🔌🐘"
    @terraform output -raw transaction_pooler_connection_string
    @echo "\n>>> Transaction Pooler Connection (JDBC): ☕️️🔌🐘"
    @terraform output -raw transaction_pooler_jdbc_connection_string
    @echo  "\n>>> All outputs: 🤐"
    @terraform output
    @echo  "\n>>> BLOB_ACCESS_KEY_ID"
    @terraform output -raw blob_access_key_id
    @echo  "\n>>> BLOB_READ_WRITE_TOKEN"
    @terraform output -raw blob_secret_access_key
    @echo  "\n"

# 🗑️ Empty the S3 blob bucket
empty-bucket: init
    @echo ">>> Emptying S3 bucket..."
    @aws s3 rm s3://$(terraform output -raw blob_bucket_name) --recursive
    @echo ">>> S3 bucket emptied."

# 💣 Destroy all provisioned resources
destroy: init empty-bucket
    @terraform destroy -var "branch_name={{ branch_name }}" -auto-approve
    @echo ">>> Destroyed all resources for branch '{{ branch_name }}'."

# 👀 Show BACKEND_DATABASE_URL for normal operations (using PgBouncer).
backend-database-url:
    @echo "$(terraform output -raw transaction_pooler_connection_string | sed 's/postgresql:\/\//postgresql+asyncpg:\/\//g' | sed 's/\?.*//g')"

# 👀 Show BACKEND_DATABASE_URL for direct connections (bypassing PgBouncer, for migrations).
backend-direct-database-url:
    @echo "$(terraform output -raw direct_database_connection_string | sed 's/postgresql:\/\//postgresql+asyncpg:\/\//g')&ssl=true"

# 👀 Show FRONTEND_DATABASE_URL.
frontend-database-url:
    @echo "$(terraform output -raw transaction_pooler_connection_string)"
