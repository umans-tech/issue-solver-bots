#!/usr/bin/env just --justfile

set dotenv-load

ws := `bash -c 'if [ -n "$GH_PR_NUMBER" ]; then \
    echo "pr-$GH_PR_NUMBER"; \
  else \
    branch=$(git rev-parse --abbrev-ref HEAD | sed "s/[\\/]/-/g"); \
    if [ "$branch" = "main" ]; then \
      echo "production"; \
    else \
      echo "pr-$branch"; \
    fi; \
  fi'`

branch_name := `bash -c 'git rev-parse --abbrev-ref HEAD'`
# set stripe_secret_key to  STRIPE_SECRET_KEY_PROD if production workspace else STRIPE_SECRET_KEY_DEV
stripe_secret_key := `bash -c 'if [ "{{ws}}" = "production" ]; then \
    echo "$STRIPE_SECRET_KEY_PROD"; \
  else \
    echo "$STRIPE_SECRET_KEY_DEV"; \
  fi'`

# 🎬 Initialize terraform workspace for apps deployment
init:
    @echo ">>> Using workspace: {{ws}}"
    @echo ">>> Using branch name: {{branch_name}}"
    @terraform workspace select {{ws}} 2>/dev/null || terraform workspace new {{ws}}
    @terraform init

# 🗺️ Plan changes for apps deployment
plan: init
    @terraform plan -var "branch_name={{branch_name}}" -var "stripe_secret_key={{stripe_secret_key}}"

# 🚀 Apply changes for apps deployment
apply: init
    @terraform apply -var "branch_name={{branch_name}}" -var "stripe_secret_key={{stripe_secret_key}}" -auto-approve
    @echo ">>> Deployed App URLs:"
    @echo ">>> AWS:"
    @terraform output conversational_ui_url

# 💣 Destroy all resources for apps deployment
destroy: init
    @terraform destroy -var "branch_name={{branch_name}}" -var "stripe_secret_key={{stripe_secret_key}}" -auto-approve
    @echo ">>> Destroyed all resources for branch '{{branch_name}}'."